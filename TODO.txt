TODO LIST:

MessageBusImpl:
1. IsRegistered()----------------------------------------V
2. isQueueEmpty(MicroService m)--------------------------V
3. isSubscribedToBroadcast()-----------------------------V
4. isSubscribedToEvent()---------------------------------V
5. regsiter()--------------------------------------------V
6. unregsiter()------------------------------------------V
7. subscribeEvent()--------------------------------------V
8. subscribeBroadcast()----------------------------------V
9. sendEvent()-------------------------------------------v
10 .sendBroadcast()--------------------------------------v
11 . awaitMessage()--------------------------------------v

to fix & verify :
1. isSubscribedToEvent - problem with generics
2.  eventSubscriptions field in msgbusimpl - problem with generics
4. verify: sendBroadcast , sendEvent.
3. future return value in sendEvent() : just returning and not binding anything.
5. synchronized in interfaces. not compiles.
6. sendEvent, sendBroadcast , awaitMessage implemetation.

ideas:
1. in sendEvent(Event<T> e) , sendBroadcast() : sync on the runner object and not on the whole msgbus
    to improve funtionality.
    solution : to sync on the event TYPE!
#################################################################################
Future:
1. Constructor()-----------------------------------------v
2. isDone()----------------------------------------------v
3. resolve()---------------------------------------------v
4. get(long timeout, TimeUnit unit)----------------------v
5. get()-------------------------------------------------v

to fix & verify :
1. in Future.get() : pick of 1000 milliseconds is arbitrary.

#################################################################################

MicroService :

1. Constructor() ----------------------------------------V
2. getName()---------------------------------------------v
3. sendEvent(Event<T> e)---------------------------------v
4. sendBroadcast()---------------------------------------v
5. complete(Event <T> e, T result)-----------------------v
6. initialize : abstract , every micro service:
    1. registers itself to the msgbus.
    2. subscribes itself to the relevent events and broadcasts.
7. terminate()--------------------------------------------v
8.Run()---------------------------------------------------v

to fix & verify :
1. added 'synchronized' in sendBroadcast() , sendEvent() signatures.
2. syncing on msgbus AND on the microservice is unneccesery and dangerous. need to decide which sync.
3. terminate - completed?

#################################################################################
CPU & CPUService:

to fix & verify :
1. no synchronization needed?
2. turn internalTimer to ATOMIC!
#################################################################################
Broadcasts:
to fix & verify :

#################################################################################
Cluster:
Student service

1. callback for the broadcast sign up.
2. SENDING EVENTS FROM STUDENT!!!!!!??????

#################################################################################
GPU service
1. TrainModelEvent - to make sure that someone wakes up the GPU after sending
   the un processed data
2. TestModelEvent -
                   a. update status for the model in each step of the way
                   b. update result
                   c. update future (?) and send complete

#################################################################################
Cluster
1. send unprocessed data function
#################################################################################
Statistics:
to fix & verify :
1. remember to update cluster.dataBatchesProcessed number after each CPU process
2. implement NumberOfGPUTimeUnitsUsed()
3. sync?


#################################################################################
EREZ ROCKER:
1. fix the blessed main class ------------------------------------------------ V
2. figure out callback and how to use them in run() method of microservice : line 180
3. initialize() studentService
4. initialize() GPUService
